package com.bawaweb.model;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RprtReportReporterXrefImpl extends EntityImpl {
    public static final int RPRTID = 0;
    public static final int RPTRID = 1;
    public static final int RPTYID = 2;
    public static final int DISTRIBUTIONNOTES = 3;
    public static final int ROWID = 4;
    private static RprtReportReporterXrefDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public RprtReportReporterXrefImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (RprtReportReporterXrefDefImpl)EntityDefImpl.findDefObject("com.bawaweb.model.RprtReportReporterXref");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for RprtId, using the alias name RprtId
     */
    public Number getRprtId() {
        return (Number)getAttributeInternal(RPRTID);
    }

    /**Sets <code>value</code> as the attribute value for RprtId
     */
    public void setRprtId(Number value) {
        setAttributeInternal(RPRTID, value);
    }

    /**Gets the attribute value for RptrId, using the alias name RptrId
     */
    public Number getRptrId() {
        return (Number)getAttributeInternal(RPTRID);
    }

    /**Sets <code>value</code> as the attribute value for RptrId
     */
    public void setRptrId(Number value) {
        setAttributeInternal(RPTRID, value);
    }

    /**Gets the attribute value for RptyId, using the alias name RptyId
     */
    public Number getRptyId() {
        return (Number)getAttributeInternal(RPTYID);
    }

    /**Sets <code>value</code> as the attribute value for RptyId
     */
    public void setRptyId(Number value) {
        setAttributeInternal(RPTYID, value);
    }

    /**Gets the attribute value for DistributionNotes, using the alias name DistributionNotes
     */
    public String getDistributionNotes() {
        return (String)getAttributeInternal(DISTRIBUTIONNOTES);
    }

    /**Sets <code>value</code> as the attribute value for DistributionNotes
     */
    public void setDistributionNotes(String value) {
        setAttributeInternal(DISTRIBUTIONNOTES, value);
    }

    /**Gets the attribute value for RowID, using the alias name RowID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RPRTID:
            return getRprtId();
        case RPTRID:
            return getRptrId();
        case RPTYID:
            return getRptyId();
        case DISTRIBUTIONNOTES:
            return getDistributionNotes();
        case ROWID:
            return getRowID();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RPRTID:
            setRprtId((Number)value);
            return;
        case RPTRID:
            setRptrId((Number)value);
            return;
        case RPTYID:
            setRptyId((Number)value);
            return;
        case DISTRIBUTIONNOTES:
            setDistributionNotes((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
