package com.bawaweb.model;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RptyReporterTypesImpl extends EntityImpl {
    public static final int RPTYID = 0;
    public static final int RPTYDESC = 1;
    private static RptyReporterTypesDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public RptyReporterTypesImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (RptyReporterTypesDefImpl)EntityDefImpl.findDefObject("com.bawaweb.model.RptyReporterTypes");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for RptyId, using the alias name RptyId
     */
    public Number getRptyId() {
        return (Number)getAttributeInternal(RPTYID);
    }

    /**Sets <code>value</code> as the attribute value for RptyId
     */
    public void setRptyId(Number value) {
        setAttributeInternal(RPTYID, value);
    }

    /**Gets the attribute value for RptyDesc, using the alias name RptyDesc
     */
    public String getRptyDesc() {
        return (String)getAttributeInternal(RPTYDESC);
    }

    /**Sets <code>value</code> as the attribute value for RptyDesc
     */
    public void setRptyDesc(String value) {
        setAttributeInternal(RPTYDESC, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RPTYID:
            return getRptyId();
        case RPTYDESC:
            return getRptyDesc();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RPTYID:
            setRptyId((Number)value);
            return;
        case RPTYDESC:
            setRptyDesc((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number rptyId) {
        return new Key(new Object[]{rptyId});
    }
}
