package com.bawaweb.model.viewobjects;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrcRprtRprtrDateViewImpl extends EntityImpl {
    public static final int SRCID = 0;
    public static final int REPORTS = 1;
    public static final int REPORTERS = 2;
    public static final int LASTDUEDATE = 3;
    private static SrcRprtRprtrDateViewDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SrcRprtRprtrDateViewImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = (SrcRprtRprtrDateViewDefImpl)EntityDefImpl.findDefObject("com.bawaweb.model.viewobjects.SrcRprtRprtrDateView");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for SrcId, using the alias name SrcId
     */
    public Number getSrcId() {
        return (Number)getAttributeInternal(SRCID);
    }

    /**Sets <code>value</code> as the attribute value for SrcId
     */
    public void setSrcId(Number value) {
        setAttributeInternal(SRCID, value);
    }

    /**Gets the attribute value for Reports, using the alias name Reports
     */
    public Number getReports() {
        return (Number)getAttributeInternal(REPORTS);
    }

    /**Sets <code>value</code> as the attribute value for Reports
     */
    public void setReports(Number value) {
        setAttributeInternal(REPORTS, value);
    }

    /**Gets the attribute value for Reporters, using the alias name Reporters
     */
    public Number getReporters() {
        return (Number)getAttributeInternal(REPORTERS);
    }

    /**Sets <code>value</code> as the attribute value for Reporters
     */
    public void setReporters(Number value) {
        setAttributeInternal(REPORTERS, value);
    }

    /**Gets the attribute value for Lastduedate, using the alias name Lastduedate
     */
    public Date getLastduedate() {
        return (Date)getAttributeInternal(LASTDUEDATE);
    }

    /**Sets <code>value</code> as the attribute value for Lastduedate
     */
    public void setLastduedate(Date value) {
        setAttributeInternal(LASTDUEDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SRCID:
            return getSrcId();
        case REPORTS:
            return getReports();
        case REPORTERS:
            return getReporters();
        case LASTDUEDATE:
            return getLastduedate();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SRCID:
            setSrcId((Number)value);
            return;
        case REPORTS:
            setReports((Number)value);
            return;
        case REPORTERS:
            setReporters((Number)value);
            return;
        case LASTDUEDATE:
            setLastduedate((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number srcId) {
        return new Key(new Object[]{srcId});
    }
}
