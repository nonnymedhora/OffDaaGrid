package com.bawaweb.views;

import com.bawaweb.views.common.DBInstanceRow;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DBInstanceRowImpl extends ViewRowImpl implements DBInstanceRow {
    public static final int INSTANCENUMBER = 0;
    public static final int INSTANCENAME = 1;
    public static final int HOSTNAME = 2;
    public static final int VERSION = 3;
    public static final int STARTUPTIME = 4;
    public static final int STATUS = 5;
    public static final int PARALLEL = 6;
    public static final int THREAD = 7;
    public static final int ARCHIVER = 8;
    public static final int LOGSWITCHWAIT = 9;
    public static final int LOGINS = 10;
    public static final int SHUTDOWNPENDING = 11;
    public static final int DATABASESTATUS = 12;
    public static final int INSTANCEROLE = 13;
    public static final int ACTIVESTATE = 14;
    public static final int BLOCKED = 15;

    /**This is the default constructor (do not remove)
     */
    public DBInstanceRowImpl() {
    }

    /**Gets the attribute value for the calculated attribute InstanceNumber
     */
    public Number getInstanceNumber() {
        return (Number) getAttributeInternal(INSTANCENUMBER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute InstanceNumber
     */
    public void setInstanceNumber(Number value) {
        setAttributeInternal(INSTANCENUMBER, value);
    }

    /**Gets the attribute value for the calculated attribute InstanceName
     */
    public String getInstanceName() {
        return (String) getAttributeInternal(INSTANCENAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute InstanceName
     */
    public void setInstanceName(String value) {
        setAttributeInternal(INSTANCENAME, value);
    }

    /**Gets the attribute value for the calculated attribute HostName
     */
    public String getHostName() {
        return (String) getAttributeInternal(HOSTNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HostName
     */
    public void setHostName(String value) {
        setAttributeInternal(HOSTNAME, value);
    }

    /**Gets the attribute value for the calculated attribute Version
     */
    public String getVersion() {
        return (String) getAttributeInternal(VERSION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Version
     */
    public void setVersion(String value) {
        setAttributeInternal(VERSION, value);
    }

    /**Gets the attribute value for the calculated attribute StartupTime
     */
    public Date getStartupTime() {
        return (Date) getAttributeInternal(STARTUPTIME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute StartupTime
     */
    public void setStartupTime(Date value) {
        setAttributeInternal(STARTUPTIME, value);
    }

    /**Gets the attribute value for the calculated attribute Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**Gets the attribute value for the calculated attribute Parallel
     */
    public String getParallel() {
        return (String) getAttributeInternal(PARALLEL);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Parallel
     */
    public void setParallel(String value) {
        setAttributeInternal(PARALLEL, value);
    }

    /**Gets the attribute value for the calculated attribute Thread
     */
    public Number getThread() {
        return (Number) getAttributeInternal(THREAD);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Thread
     */
    public void setThread(Number value) {
        setAttributeInternal(THREAD, value);
    }

    /**Gets the attribute value for the calculated attribute Archiver
     */
    public String getArchiver() {
        return (String) getAttributeInternal(ARCHIVER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Archiver
     */
    public void setArchiver(String value) {
        setAttributeInternal(ARCHIVER, value);
    }

    /**Gets the attribute value for the calculated attribute LogSwitchWait
     */
    public String getLogSwitchWait() {
        return (String) getAttributeInternal(LOGSWITCHWAIT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute LogSwitchWait
     */
    public void setLogSwitchWait(String value) {
        setAttributeInternal(LOGSWITCHWAIT, value);
    }

    /**Gets the attribute value for the calculated attribute Logins
     */
    public String getLogins() {
        return (String) getAttributeInternal(LOGINS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Logins
     */
    public void setLogins(String value) {
        setAttributeInternal(LOGINS, value);
    }

    /**Gets the attribute value for the calculated attribute ShutdownPending
     */
    public String getShutdownPending() {
        return (String) getAttributeInternal(SHUTDOWNPENDING);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ShutdownPending
     */
    public void setShutdownPending(String value) {
        setAttributeInternal(SHUTDOWNPENDING, value);
    }

    /**Gets the attribute value for the calculated attribute DatabaseStatus
     */
    public String getDatabaseStatus() {
        return (String) getAttributeInternal(DATABASESTATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DatabaseStatus
     */
    public void setDatabaseStatus(String value) {
        setAttributeInternal(DATABASESTATUS, value);
    }

    /**Gets the attribute value for the calculated attribute InstanceRole
     */
    public String getInstanceRole() {
        return (String) getAttributeInternal(INSTANCEROLE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute InstanceRole
     */
    public void setInstanceRole(String value) {
        setAttributeInternal(INSTANCEROLE, value);
    }

    /**Gets the attribute value for the calculated attribute ActiveState
     */
    public String getActiveState() {
        return (String) getAttributeInternal(ACTIVESTATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ActiveState
     */
    public void setActiveState(String value) {
        setAttributeInternal(ACTIVESTATE, value);
    }

    /**Gets the attribute value for the calculated attribute Blocked
     */
    public String getBlocked() {
        return (String) getAttributeInternal(BLOCKED);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Blocked
     */
    public void setBlocked(String value) {
        setAttributeInternal(BLOCKED, value);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case INSTANCENUMBER:
            return getInstanceNumber();
        case INSTANCENAME:
            return getInstanceName();
        case HOSTNAME:
            return getHostName();
        case VERSION:
            return getVersion();
        case STARTUPTIME:
            return getStartupTime();
        case STATUS:
            return getStatus();
        case PARALLEL:
            return getParallel();
        case THREAD:
            return getThread();
        case ARCHIVER:
            return getArchiver();
        case LOGSWITCHWAIT:
            return getLogSwitchWait();
        case LOGINS:
            return getLogins();
        case SHUTDOWNPENDING:
            return getShutdownPending();
        case DATABASESTATUS:
            return getDatabaseStatus();
        case INSTANCEROLE:
            return getInstanceRole();
        case ACTIVESTATE:
            return getActiveState();
        case BLOCKED:
            return getBlocked();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
