package com.bawaweb.views.utils;

import com.bawaweb.model.OtlLookupDataImpl;

import com.bawaweb.views.utils.common.IndustryViewsRow;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IndustryViewsRowImpl extends ViewRowImpl implements IndustryViewsRow {
    public static final int LKDLKTCODE = 0;
    public static final int LKDCODE = 1;
    public static final int LKDDESCRIPTION = 2;
    public static final int LKDDISPLAYSEQ = 3;

    /**This is the default constructor (do not remove)
     */
    public IndustryViewsRowImpl() {
    }

    /**Gets OtlLookupData entity object.
     */
    public OtlLookupDataImpl getOtlLookupData() {
        return (OtlLookupDataImpl)getEntity(0);
    }

    /**Gets the attribute value for LKD_LKT_CODE using the alias name LkdLktCode
     */
    public String getLkdLktCode() {
        return (String) getAttributeInternal(LKDLKTCODE);
    }

    /**Sets <code>value</code> as attribute value for LKD_LKT_CODE using the alias name LkdLktCode
     */
    public void setLkdLktCode(String value) {
        setAttributeInternal(LKDLKTCODE, value);
    }

    /**Gets the attribute value for LKD_CODE using the alias name LkdCode
     */
    public String getLkdCode() {
        return (String) getAttributeInternal(LKDCODE);
    }

    /**Sets <code>value</code> as attribute value for LKD_CODE using the alias name LkdCode
     */
    public void setLkdCode(String value) {
        setAttributeInternal(LKDCODE, value);
    }

    /**Gets the attribute value for LKD_DESCRIPTION using the alias name LkdDescription
     */
    public String getLkdDescription() {
        return (String) getAttributeInternal(LKDDESCRIPTION);
    }

    /**Sets <code>value</code> as attribute value for LKD_DESCRIPTION using the alias name LkdDescription
     */
    public void setLkdDescription(String value) {
        setAttributeInternal(LKDDESCRIPTION, value);
    }

    /**Gets the attribute value for LKD_DISPLAY_SEQ using the alias name LkdDisplaySeq
     */
    public Number getLkdDisplaySeq() {
        return (Number) getAttributeInternal(LKDDISPLAYSEQ);
    }

    /**Sets <code>value</code> as attribute value for LKD_DISPLAY_SEQ using the alias name LkdDisplaySeq
     */
    public void setLkdDisplaySeq(Number value) {
        setAttributeInternal(LKDDISPLAYSEQ, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case LKDLKTCODE:
            return getLkdLktCode();
        case LKDCODE:
            return getLkdCode();
        case LKDDESCRIPTION:
            return getLkdDescription();
        case LKDDISPLAYSEQ:
            return getLkdDisplaySeq();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case LKDLKTCODE:
            setLkdLktCode((String)value);
            return;
        case LKDCODE:
            setLkdCode((String)value);
            return;
        case LKDDESCRIPTION:
            setLkdDescription((String)value);
            return;
        case LKDDISPLAYSEQ:
            setLkdDisplaySeq((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
