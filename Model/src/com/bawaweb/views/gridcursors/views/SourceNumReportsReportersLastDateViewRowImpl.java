package com.bawaweb.views.gridcursors.views;

import com.bawaweb.model.viewobjects.SrcRprtRprtrDateViewImpl;

import com.bawaweb.views.gridcursors.views.common.SourceNumReportsReportersLastDateViewRow;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SourceNumReportsReportersLastDateViewRowImpl extends ViewRowImpl implements SourceNumReportsReportersLastDateViewRow {
    public static final int SRCID = 0;
    public static final int REPORTS = 1;
    public static final int REPORTERS = 2;
    public static final int LASTDUEDATE = 3;

    /**This is the default constructor (do not remove)
     */
    public SourceNumReportsReportersLastDateViewRowImpl() {
    }

    /**Gets SrcRprtRprtrDateView entity object.
     */
    public SrcRprtRprtrDateViewImpl getSrcRprtRprtrDateView() {
        return (SrcRprtRprtrDateViewImpl)getEntity(0);
    }

    /**Gets the attribute value for SRC_ID using the alias name SrcId
     */
    public Number getSrcId() {
        return (Number) getAttributeInternal(SRCID);
    }

    /**Sets <code>value</code> as attribute value for SRC_ID using the alias name SrcId
     */
    public void setSrcId(Number value) {
        setAttributeInternal(SRCID, value);
    }

    /**Gets the attribute value for REPORTS using the alias name Reports
     */
    public Number getReports() {
        return (Number) getAttributeInternal(REPORTS);
    }

    /**Sets <code>value</code> as attribute value for REPORTS using the alias name Reports
     */
    public void setReports(Number value) {
        setAttributeInternal(REPORTS, value);
    }

    /**Gets the attribute value for REPORTERS using the alias name Reporters
     */
    public Number getReporters() {
        return (Number) getAttributeInternal(REPORTERS);
    }

    /**Sets <code>value</code> as attribute value for REPORTERS using the alias name Reporters
     */
    public void setReporters(Number value) {
        setAttributeInternal(REPORTERS, value);
    }

    /**Gets the attribute value for LASTDUEDATE using the alias name Lastduedate
     */
    public Date getLastduedate() {
        return (Date) getAttributeInternal(LASTDUEDATE);
    }

    /**Sets <code>value</code> as attribute value for LASTDUEDATE using the alias name Lastduedate
     */
    public void setLastduedate(Date value) {
        setAttributeInternal(LASTDUEDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SRCID:
            return getSrcId();
        case REPORTS:
            return getReports();
        case REPORTERS:
            return getReporters();
        case LASTDUEDATE:
            return getLastduedate();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SRCID:
            setSrcId((Number)value);
            return;
        case REPORTS:
            setReports((Number)value);
            return;
        case REPORTERS:
            setReporters((Number)value);
            return;
        case LASTDUEDATE:
            setLastduedate((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
